/*
 * MetaFab API
 *
 * Complete MetaFab API references and guides can be found at: https://trymetafab.com
 *
 * The version of the OpenAPI document: 1.5.1
 * Contact: metafabproject@gmail.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateCollectionRequest {
    /// The name of this item collection. This can be anything, such as `Production - Item Collection`, `Testing - My Game Item Collection`, etc.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The blockchain you want to deploy this item collection on. Support for new blockchains are added over time.
    #[serde(rename = "chain")]
    pub chain: Chain,
}

impl CreateCollectionRequest {
    pub fn new(chain: Chain) -> CreateCollectionRequest {
        CreateCollectionRequest {
            name: None,
            chain,
        }
    }
}

/// The blockchain you want to deploy this item collection on. Support for new blockchains are added over time.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Chain {
    #[serde(rename = "ARBITRUM")]
    Arbitrum,
    #[serde(rename = "ARBITRUMGOERLI")]
    Arbitrumgoerli,
    #[serde(rename = "ARBITRUMNOVA")]
    Arbitrumnova,
    #[serde(rename = "AVALANCHE")]
    Avalanche,
    #[serde(rename = "AVALANCHEFUJI")]
    Avalanchefuji,
    #[serde(rename = "ETHEREUM")]
    Ethereum,
    #[serde(rename = "FANTOM")]
    Fantom,
    #[serde(rename = "FANTOMTEST")]
    Fantomtest,
    #[serde(rename = "GOERLI")]
    Goerli,
    #[serde(rename = "MATIC")]
    Matic,
    #[serde(rename = "MATICMUMBAI")]
    Maticmumbai,
    #[serde(rename = "THUNDERCORE")]
    Thundercore,
    #[serde(rename = "THUNDERCORETESTNET")]
    Thundercoretestnet,
}

impl Default for Chain {
    fn default() -> Chain {
        Self::Arbitrum
    }
}

